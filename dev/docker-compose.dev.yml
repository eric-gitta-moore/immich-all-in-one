#
# WARNING: To install Immich, follow our guide: https://immich.app/docs/install/docker-compose
#
# Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.

# For development see:
# - https://immich.app/docs/developer/setup
# - https://immich.app/docs/developer/troubleshooting

name: immich-dev

services:
  immich-server:
    container_name: immich_server
    command: [ '/usr/src/app/bin/immich-dev' ]
    image: immich-server-dev:latest
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    build:
      context: ../immich/docker/../
      dockerfile: server/Dockerfile
      target: dev
    restart: unless-stopped
    volumes:
      - ../immich/docker/../server:/usr/src/app
      - ../immich/docker/../open-api:/usr/src/open-api
      - ${UPLOAD_LOCATION}/photos:/usr/src/app/upload
      - ${UPLOAD_LOCATION}/photos/upload:/usr/src/app/upload/upload
      - /usr/src/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      IMMICH_MACHINE_LEARNING_URL: http://inference-gateway:8080
      IMMICH_REPOSITORY: immich-app/immich
      IMMICH_REPOSITORY_URL: https://github.com/immich-app/immich
      IMMICH_SOURCE_REF: local
      IMMICH_SOURCE_COMMIT: af2efbdbbddc27cd06142f22253ccbbbbeec1f55
      IMMICH_SOURCE_URL: https://github.com/immich-app/immich/commit/af2efbdbbddc27cd06142f22253ccbbbbeec1f55
      IMMICH_BUILD: '9654404849'
      IMMICH_BUILD_URL: https://github.com/immich-app/immich/actions/runs/9654404849
      IMMICH_BUILD_IMAGE: development
      IMMICH_BUILD_IMAGE_URL: https://github.com/immich-app/immich/pkgs/container/immich-server
      IMMICH_THIRD_PARTY_SOURCE_URL: https://github.com/immich-app/immich/
      IMMICH_THIRD_PARTY_BUG_FEATURE_URL: https://github.com/immich-app/immich/issues
      IMMICH_THIRD_PARTY_DOCUMENTATION_URL: https://immich.app/docs
      IMMICH_THIRD_PARTY_SUPPORT_URL: https://immich.app/docs/community-guides
      IMMICH_LOG_LEVEL: verbose
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    ports:
      - 9230:9230
      - 9231:9231
      - 2283:2283
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-web:
    container_name: immich_web
    platform: linux/amd64
    image: immich-web-dev:latest
    # Needed for rootless docker setup, see https://github.com/moby/moby/issues/45919
    # user: 0:0
    build:
      context: ../immich/docker/../web
    command: [ '/usr/src/app/bin/immich-web' ]
    env_file:
      - .env
    ports:
      - 3000:3000
      - 24678:24678
    volumes:
      - ../immich/docker/../web:/usr/src/app
      - ../immich/docker/../i18n:/usr/src/i18n
      - ../immich/docker/../open-api/:/usr/src/open-api/
      # - ../../ui:/usr/ui
      - /usr/src/app/node_modules
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    restart: unless-stopped
    depends_on:
      - immich-server

  immich-machine-learning:
    container_name: immich_machine_learning
    platform: linux/amd64
    image: immich-machine-learning-dev:latest
    # extends:
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference
    build:
      context: ../immich/docker/../machine-learning
      dockerfile: Dockerfile
      args:
        - DEVICE=cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference
    ports:
      - 3003:3003
    volumes:
      - ../immich/docker/../machine-learning:/usr/src/app
      - model-cache:/cache
    env_file:
      - .env
    depends_on:
      - database
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    healthcheck:
      test: redis-cli ping || exit 1
    ports:
      - 6379:6379

  database:
    container_name: immich_postgres
    build:
      context: ../postgresql
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${UPLOAD_LOCATION}/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
  # set IMMICH_TELEMETRY_INCLUDE=all in .env to enable metrics
  # immich-prometheus:
  #   container_name: immich_prometheus
  #   ports:
  #     - 9090:9090
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus

  # first login uses admin/admin
  # add data source for http://immich-prometheus:9090 to get started
  # immich-grafana:
  #   container_name: immich_grafana
  #   command: ['./run.sh', '-disable-reporting']
  #   ports:
  #     - 3000:3000
  #   image: grafana/grafana:10.3.3-ubuntu
  #   volumes:
  #     - grafana-data:/var/lib/grafana

  inference-gateway:
    build:
      context: ../inference-gateway
      dockerfile: Dockerfile
    environment:
      - IMMICH_API=http://immich-machine-learning:3003
      - MT_PHOTOS_API=http://photos-ai:8060
      - MT_PHOTOS_API_KEY=mt_photos_ai_extra
    ports:
      - 8080:8080
    depends_on:
      - immich-machine-learning
      - photos-ai
    restart: unless-stopped

  photos-ai:
    build:
      context: ../mt-photos-ai
      dockerfile: Dockerfile
      args:
        - DEVICE=${DEVICE:-cpu}
    extends:
      file: hwaccel.yml
      service: ${DEVICE:-cpu}
    environment:
      - API_AUTH_KEY=mt_photos_ai_extra
      - CLIP_MODEL=ViT-B-16
      - RECOGNITION_MODEL=buffalo_l
      - DETECTION_THRESH=0.65
    volumes:
      - ./models/clip:/app/.cache/clip
      - ./models/rapidocr:/app/.venv/lib/python3.11/site-packages/rapidocr/models/
      - ./models/insightface:/root/.insightface/models
    ports:
      - 8060:8060
    restart: unless-stopped


volumes:
  model-cache:
  prometheus-data:
  grafana-data:
